"use strict";/**
 * jQuery Geocoding and Places Autocomplete Plugin - V 1.4
 *
 * @author Martin Kleppe <kleppe@ubilabs.net>, 2012
 * @author Ubilabs http://ubilabs.net, 2012
 * @license MIT License <http://www.opensource.org/licenses/mit-license.php>
 */(function(i,a,b,c){function j(a,b){this.options=i.extend(!0,{},d,b),this.input=a,this.$input=i(a),this._defaults=d,this._name="geocomplete",this.init()}var d={bounds:!0,country:null,map:!1,details:!1,detailsAttribute:"name",location:!1,mapOptions:{zoom:14,scrollwheel:!1,mapTypeId:"roadmap"},markerOptions:{draggable:!1},maxZoom:16,types:["geocode"],blur:!1},h=["street_address","route","intersection","political","country","administrative_area_level_1","administrative_area_level_2","administrative_area_level_3","colloquial_area","locality","sublocality","neighborhood","premise","subpremise","postal_code","natural_feature","airport","park","point_of_interest","post_box","street_number","floor","room","lat","lng","viewport","location","formatted_address","location_type","bounds"],k=["id","url","website","vicinity","reference","name","rating","international_phone_number","icon","formatted_phone_number"];i.extend(j.prototype,{init:function(){this.initMap(),this.initMarker(),this.initGeocoder(),this.initDetails(),this.initLocation()},initMap:function(){if(this.options.map){if("function"==typeof this.options.map.setCenter)return this.map=this.options.map,c;this.map=new google.maps.Map(i(this.options.map)[0],this.options.mapOptions),google.maps.event.addListener(this.map,"click",i.proxy(this.mapClicked,this))}},initMarker:function(){if(this.map){var a=i.extend(this.options.markerOptions,{map:this.map});a.disabled||(this.marker=new google.maps.Marker(a),google.maps.event.addListener(this.marker,"dragend",i.proxy(this.markerDragged,this)))}},initGeocoder:function(){var a={types:this.options.types,bounds:!0===this.options.bounds?null:this.options.bounds,componentRestrictions:this.options.componentRestrictions};this.options.country&&(a.componentRestrictions={country:this.options.country}),this.autocomplete=new google.maps.places.Autocomplete(this.input,a),this.geocoder=new google.maps.Geocoder,this.map&&!0===this.options.bounds&&this.autocomplete.bindTo("bounds",this.map),google.maps.event.addListener(this.autocomplete,"place_changed",i.proxy(this.placeChanged,this)),this.$input.keypress(function(b){return 13!==b.keyCode&&c}),this.$input.bind("geocode",i.proxy(function(){this.find()},this)),!0===this.options.blur&&this.$input.blur(i.proxy(function(){this.find()},this))},initDetails:function(){function f(d){c[d]=e.find("["+b+"="+d+"]")}if(this.options.details){var e=i(this.options.details),b=this.options.detailsAttribute,c={};i.each(h,function(c,a){f(a),f(a+"_short")}),i.each(k,function(c,a){f(a)}),this.$details=e,this.details=c}},initLocation:function(){var d,e=this.options.location;if(e){if("string"==typeof e)return this.find(e),c;e instanceof Array&&(d=new google.maps.LatLng(e[0],e[1])),e instanceof google.maps.LatLng&&(d=e),d&&(this.map&&this.map.setCenter(d),this.marker&&this.marker.setPosition(d))}},find:function(b){this.geocode({address:b||this.$input.val()})},geocode:function(a){this.options.bounds&&!a.bounds&&(a.bounds=!0===this.options.bounds?this.map&&this.map.getBounds():this.options.bounds),this.options.country&&(a.region=this.options.country),this.geocoder.geocode(a,i.proxy(this.handleGeocode,this))},handleGeocode:function(d,a){if(a===google.maps.GeocoderStatus.OK){var b=d[0];this.$input.val(b.formatted_address),this.update(b),1<d.length&&this.trigger("geocode:multiple",d)}else this.trigger("geocode:error",a)},trigger:function(c,a){this.$input.trigger(c,[a])},center:function(b){b.viewport?(this.map.fitBounds(b.viewport),this.map.getZoom()>this.options.maxZoom&&this.map.setZoom(this.options.maxZoom)):(this.map.setZoom(this.options.maxZoom),this.map.setCenter(b.location)),this.marker&&(this.marker.setPosition(b.location),this.marker.setAnimation(this.options.markerOptions.animation))},update:function(b){this.map&&this.center(b.geometry),this.$details&&this.fillDetails(b),this.trigger("geocode:result",b)},fillDetails:function(g){var h={},a=g.geometry,b=a.viewport,c=a.bounds;i.each(g.address_components,function(c,a){var b=a.types[0];h[b]=a.long_name,h[b+"_short"]=a.short_name}),i.each(k,function(b,a){h[a]=g[a]}),i.extend(h,{formatted_address:g.formatted_address,location_type:a.location_type||"PLACES",viewport:b,bounds:c,location:a.location,lat:a.location.lat(),lng:a.location.lng()}),i.each(this.details,i.proxy(function(c,a){var b=h[c];this.setDetail(a,b)},this)),this.data=h},setDetail:function(d,a){a===c?a="":"function"==typeof a.toUrlValue&&(a=a.toUrlValue()),d.is(":input")?d.val(a):d.text(a)},markerDragged:function(b){this.trigger("geocode:dragged",b.latLng)},mapClicked:function(b){this.trigger("geocode:click",b.latLng)},resetMarker:function(){this.marker.setPosition(this.data.location),this.setDetail(this.details.lat,this.data.location.lat()),this.setDetail(this.details.lng,this.data.location.lng())},placeChanged:function(){var b=this.autocomplete.getPlace();b.geometry?this.update(b):this.find(b.name)}}),i.fn.geocomplete=function(a){if("string"==typeof a){var b=i(this).data("plugin_geocomplete")||i(this).geocomplete().data("plugin_geocomplete"),c=b[a];return"function"==typeof c?(c.apply(b,Array.prototype.slice.call(arguments,1)),i(this)):(2==arguments.length&&(c=arguments[1]),c)}return this.each(function(){var b=i.data(this,"plugin_geocomplete");b||(b=new j(this,a),i.data(this,"plugin_geocomplete",b))})}})(jQuery);
